--- gtk+-2.24.0/gdk/quartz/gdkgc-quartz.c~	2011-08-19 11:13:31.000000000 -0400
+++ gtk+-2.24.0/gdk/quartz/gdkgc-quartz.c	2011-08-19 13:19:22.000000000 -0400
@@ -289,7 +289,10 @@
       private->have_clip_mask = FALSE;
     }
 
-  private->have_clip_region = region != NULL;
+  if (region == NULL || gdk_region_empty (region))
+     private->have_clip_region = FALSE;
+  else
+     private->have_clip_region = TRUE;
 
   if (reset_origin)
     {
@@ -464,24 +467,29 @@
       gdk_region_get_rectangles (_gdk_gc_get_clip_region (gc),
 				 &rects, &n_rects);
 
-      if (n_rects == 1)
-	cg_rects = &rect;
-      else
-	cg_rects = g_new (CGRect, n_rects);
-
-      for (i = 0; i < n_rects; i++)
-	{
-	  cg_rects[i].origin.x = rects[i].x + gc->clip_x_origin;
-	  cg_rects[i].origin.y = rects[i].y + gc->clip_y_origin;
-	  cg_rects[i].size.width = rects[i].width;
-	  cg_rects[i].size.height = rects[i].height;
-	}
-
-      CGContextClipToRects (context, cg_rects, n_rects);
-
-      g_free (rects);
-      if (cg_rects != &rect)
-	g_free (cg_rects);
+      if (n_rects)
+        {
+		if (n_rects == 1)
+			cg_rects = &rect;
+		else
+			cg_rects = g_new (CGRect, n_rects);
+		
+		for (i = 0; i < n_rects; i++)
+		{
+			cg_rects[i].origin.x = rects[i].x + gc->clip_x_origin;
+			cg_rects[i].origin.y = rects[i].y + gc->clip_y_origin;
+			cg_rects[i].size.width = rects[i].width;
+			cg_rects[i].size.height = rects[i].height;
+		}
+		
+		CGContextClipToRects (context, cg_rects, n_rects);
+		
+		g_free (rects);
+		if (cg_rects != &rect)
+			g_free (cg_rects);
+	} else {
+		printf ("have clip region, but its empty!\n");
+        }
     }
   else if (private->have_clip_mask && private->clip_mask)
     {
