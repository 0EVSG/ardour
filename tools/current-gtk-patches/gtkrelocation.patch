diff --git a/configure.ac b/configure.ac
index e777ed0..70e4719 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1253,22 +1253,31 @@ else
   AM_CONDITIONAL(USE_WIN32, false)
 fi
 
+AC_ARG_ENABLE(relocation,
+              [AS_HELP_STRING([--enable-relocation],
+                              [enable bundle-based relocation functions])],
+                              [allow_relocation=yes])
+
+# --enable-quartz-relocation is a legacy flag that should eventually
+# be removed when the only relocation flag is just --enable-relocation.
+# for now, it has the same effect as --enable-relocation
 AC_ARG_ENABLE(quartz-relocation,
               [AS_HELP_STRING([--enable-quartz-relocation],
                               [enable bundle-based relocation functions])],
-                              [quartz_relocation=yes])
+                              [allow_relocation=yes])
 
 if test "x$gdktarget" = "xquartz"; then
   GDK_EXTRA_LIBS="$GDK_EXTRA_LIBS -framework Cocoa"
   AM_CONDITIONAL(USE_QUARTZ, true)
-  if test "x$quartz_relocation" = xyes; then
-    AC_DEFINE([QUARTZ_RELOCATION], [1], [Use NSBundle functions to determine load paths for libraries, translations, etc.])
-  fi
-
 else
   AM_CONDITIONAL(USE_QUARTZ, false)
 fi
 
+if test "x$allow_relocation" = xyes; then
+   AC_DEFINE([ALLOW_RELOCATION], [1], [Determine load paths for libraries, translations, etc. at runtime instead of build time])
+   AM_CONDITIONAL(USE_RELOCATION, true)
+fi
+
 if test "x$gdktarget" = "xdirectfb"; then
   DIRECTFB_REQUIRED_VERSION=1.0.0
   AC_MSG_CHECKING(for DirectFB)
diff --git a/gtk/Makefile.am b/gtk/Makefile.am
index 908291f..1f16830 100644
--- a/gtk/Makefile.am
+++ b/gtk/Makefile.am
@@ -758,6 +758,10 @@ endif
 endif
 endif
 
+if USE_RELOCATION
+gtk_c_sources += gtkrelocation.c
+endif
+
 if USE_QUARTZ
 gtk_clipboard_dnd_c_sources = gtkclipboard-quartz.c gtkdnd-quartz.c gtkquartz.c
 gtk_clipboard_dnd_h_sources = gtkquartz.h
diff --git a/gtk/gtkprivate.h b/gtk/gtkprivate.h
index 6386c32..88a3bb8 100644
--- a/gtk/gtkprivate.h
+++ b/gtk/gtkprivate.h
@@ -74,8 +74,7 @@ typedef enum
 #define GTK_PRIVATE_SET_FLAG(wid,flag)    G_STMT_START{ (GTK_PRIVATE_FLAGS (wid) |= (PRIVATE_ ## flag)); }G_STMT_END
 #define GTK_PRIVATE_UNSET_FLAG(wid,flag)  G_STMT_START{ (GTK_PRIVATE_FLAGS (wid) &= ~(PRIVATE_ ## flag)); }G_STMT_END
 
-#if defined G_OS_WIN32 \
-  || (defined GDK_WINDOWING_QUARTZ && defined QUARTZ_RELOCATION)
+#if defined G_OS_WIN32 || defined ALLOW_RELOCATION
 
 const gchar *_gtk_get_datadir ();
 const gchar *_gtk_get_libdir ();
@@ -94,7 +93,7 @@ const gchar *_gtk_get_data_prefix ();
 #undef GTK_DATA_PREFIX
 #define GTK_DATA_PREFIX _gtk_get_data_prefix ()
 
-#endif /* G_OS_WIN32 */
+#endif /* G_OS_WIN32 or ALLOW_RELOCATION */
 
 gboolean _gtk_fnmatch (const char *pattern,
 		       const char *string,
diff --git a/gtk/gtkquartz.c b/gtk/gtkquartz.c
index 2f8122a..a650489 100644
--- a/gtk/gtkquartz.c
+++ b/gtk/gtkquartz.c
@@ -331,85 +331,3 @@ _gtk_quartz_set_selection_data_for_pasteboard (NSPasteboard     *pasteboard,
                                        freeWhenDone:NO]
                                             forType:type];
 }
-
-/*
- * Bundle-based functions for various directories. These almost work
- * even when the application isn't in a bundle, becuase mainBundle
- * paths point to the bin directory in that case. It's a simple matter
- * to test for that and remove the last element.
- */
-
-static const gchar *
-get_bundle_path (void)
-{
-  static gchar *path = NULL;
-
-  if (path == NULL)
-    {
-      NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];
-      gchar *resource_path = g_strdup ([[[NSBundle mainBundle] resourcePath] UTF8String]);
-      gchar *base;
-      [pool drain];
-
-      base = g_path_get_basename (resource_path);
-      if (strcmp (base, "bin") == 0)
-	path = g_path_get_dirname (resource_path);
-      else
-	path = strdup (resource_path);
-
-      g_free (resource_path);
-      g_free (base);
-    }
-
-  return path;
-}
-
-const gchar *
-_gtk_get_datadir (void)
-{
-  static gchar *path = NULL;
-
-  if (path == NULL)
-    path = g_build_filename (get_bundle_path (), "share", NULL);
-
-  return path;
-}
-
-const gchar *
-_gtk_get_libdir (void)
-{
-  static gchar *path = NULL;
-
-  if (path == NULL)
-    path = g_build_filename (get_bundle_path (), "lib", NULL);
-
-  return path;
-}
-
-const gchar *
-_gtk_get_localedir (void)
-{
-  static gchar *path = NULL;
-
-  if (path == NULL)
-    path = g_build_filename (get_bundle_path (), "share", "locale", NULL);
-
-  return path;
-}
-
-const gchar *
-_gtk_get_sysconfdir (void)
-{
-  static gchar *path = NULL;
-
-  if (path == NULL)
-    path = g_build_filename (get_bundle_path (), "etc", NULL);
-
-  return path;
-}
-
-const gchar *
-_gtk_get_data_prefix (void)
-{
-  return get_bundle_path ();
-}
